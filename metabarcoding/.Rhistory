theme_bw() +
xlab("Eigen centrality") +
theme(axis.title.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
text=element_text(size=16),
legend.position="none") +
facet_grid(cols = vars(stage)) +
scale_color_manual(values=functionalPalette)
p_water_eigen
pdf("./GE_IC_functional_figs/supplementary_RNA_water_eigen.pdf", height=7, width=16) ; plot(p_water_eigen); dev.off()
self_interaction <- c("Phototroph-Phototroph",
"Mixotroph-Mixotroph",
"Protist_parasite-Protist_parasite",
"Invertebrate_parasite-Invertebrate_parasite",
"Eukaryvore-Eukaryvore",
"Omnivore-Omnivore",
"Bacterivore-Bacterivore",
"Saprophyte-Saprophyte",
"Other_Dinophyceae-Other_Dinophyceae")
interactions_I <- water_I_net$edgelist1 %>%
rename(asv_code=v1) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.x=functional_trait, x=asv_code, asv_code=v2, species.x=species, origin.x=origin) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.y=functional_trait, y=asv_code, species.y=species, origin.y=origin)%>%
arrange(desc(asso)) %>%
mutate(pos_neg=ifelse(asso>0,"pos","neg"))
water_I_overall <- interactions_I %>%
select(x,y,functional.x,functional.y,asso,pos_neg) %>%
left_join(water_I_cluster_asv%>%select(asv_code,cluster)%>%rename(x=asv_code), by="x") %>%
left_join(water_I_cluster_asv%>%select(asv_code,cluster)%>%rename(y=asv_code), by="y")
water_I_overall$hub.x <- ifelse(water_I_overall$x %in% water_I_hubs$asv_code, "yes","no")
water_I_overall$hub.y <- ifelse(water_I_overall$y %in% water_I_hubs$asv_code, "yes","no")
write.csv(water_I_overall, "./water_RNA_I_overall.csv")
interactions_I_pos <-filter(interactions_I, interactions_I$pos_neg=="pos")
interactions_I_neg <-filter(interactions_I, interactions_I$pos_neg=="neg")
# Create a combined factor representing the pairs, sorted
sorted_pairings <- factor(apply(interactions_I_pos[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
sorted_pairings <- factor(apply(interactions_I_neg[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_I_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_I_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_I_combined <- interactions_I_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100) #%>%
#filter(total>=10)
sorted_pairing_levels <- interactions_I_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_I_combined$sorted_pairings <- factor(interactions_I_combined$sorted_pairings,levels=sorted_pairing_levels$sorted_pairings)
p_interactions_water_I <- ggplot(interactions_I_combined%>%filter(total>=10), aes(x=Freq, y=sorted_pairings, fill=pos_neg)) +
geom_bar(position="fill", stat="identity", color="black",size=0.3) +
geom_text(aes(x=Freq, y=sorted_pairings, label=Freq, vjust=0.5),
position=position_fill(vjust=0.5),
size=4,
show.legend = FALSE,
family="Helvetica",
color="white") +
theme_bw() +
theme(text=element_text(size=22),
axis.text.x = element_text(angle = 90, hjust=1),
axis.title=element_blank(),
legend.title=element_blank(),
legend.position = "bottom",
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid=element_blank(),
strip.background=element_blank(),
legend.key.size=unit(2,"line")) +
scale_fill_manual(values=c("#2f67b1","#bf2c23"),breaks=c("pos","neg"))
interactions_water_I_binned <- interactions_I_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(self = ifelse(sorted_pairings%in%self_interaction,"Yes","No")) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_I_binned$pos_bin <- str_sub(interactions_water_I_binned$pos_bin,2)
interactions_water_I_binned_self <- interactions_water_I_binned %>%
filter(self=="Yes" & pos_neg=="pos") %>%
rename(functional_trait = sorted_pairings) %>%
select(functional_trait,total,pos_bin) %>%
mutate(functional_trait = sub("-.*", "", functional_trait))
water_I_edges <- interactions_water_I_binned %>%
filter(self=="No" & pos_neg=="pos") %>%
separate(sorted_pairings,into=c("functional.x", "functional.y"),sep="-") %>%
select(functional.x, functional.y, total, pos_bin)
interaction_count <- vector()
for (i in 1:length(functionalTraits)){
count <- water_I_edges %>%
filter(functional.x == functionalTraits[i] | functional.y == functionalTraits[i])
count <- sum(count$total)
interaction_count[i] <- count
}
circle_position <- data.frame("circle_position"=c(1:9),
"functional_trait" = functionalTraits,
"interaction_count" = interaction_count)
water_I_nodes <- long_RNA_water_I %>%
group_by(functional_trait) %>%
summarize(n_reads=sum(n_reads)) %>%
left_join(interactions_water_I_binned_self, by="functional_trait") %>%
left_join(circle_position, by="functional_trait") %>%
rename(self=total,self_posbin=pos_bin)
water_I_network <- water_I_edges %>%
left_join(water_I_nodes%>%rename(functional.x=functional_trait), by="functional.x") %>%
rename(self.x=self,self_posbin.x=self_posbin, n_reads.x=n_reads,circle_position.x=circle_position) %>%
left_join(water_I_nodes%>%rename(functional.y=functional_trait), by="functional.y") %>%
rename(self.y=self,self_posbin.y=self_posbin, n_reads.y=n_reads, circle_position.y=circle_position)
water_I_network[is.na(water_I_network)] <- 0
water_I_network <- water_I_network %>%
mutate_at(c("pos_bin","self_posbin.x","self_posbin.y"), as.numeric) %>%
mutate(n_reads.x=round(n_reads.x*(88/31)), n_reads.y=round(n_reads.y*(88/31)))
#to make all network node sizes are normalised
write.csv(water_I_network, "./water_RNA_I_network.csv")
interactions_II <- water_II_net$edgelist1 %>%
rename(asv_code=v1) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.x=functional_trait, x=asv_code, asv_code=v2, species.x=species, origin.x=origin) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.y=functional_trait, y=asv_code, species.y=species, origin.y=origin)%>%
arrange(desc(asso)) %>%
mutate(pos_neg=ifelse(asso>0,"pos","neg"))
water_II_overall <- interactions_II %>%
select(x,y,functional.x,functional.y,asso,pos_neg) %>%
left_join(water_II_cluster_asv%>%select(asv_code,cluster)%>%rename(x=asv_code), by="x") %>%
left_join(water_II_cluster_asv%>%select(asv_code,cluster)%>%rename(y=asv_code), by="y")
water_II_overall$hub.x <- ifelse(water_II_overall$x %in% water_II_hubs$asv_code, "yes","no")
water_II_overall$hub.y <- ifelse(water_II_overall$y %in% water_II_hubs$asv_code, "yes","no")
write.csv(water_II_overall, "./water_RNA_II_overall.csv")
interactions_II_pos <-filter(interactions_II, interactions_II$pos_neg=="pos")
interactions_II_neg <-filter(interactions_II, interactions_II$pos_neg=="neg")
# Create a combined factor representing the pairs, sorted
sorted_pairings <- factor(apply(interactions_II_pos[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
sorted_pairings <- factor(apply(interactions_II_neg[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_II_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_II_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_II_combined <- interactions_II_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100) #%>%
#filter(total>=10)
sorted_pairing_levels <- interactions_II_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_II_combined$sorted_pairings <- factor(interactions_II_combined$sorted_pairings,levels=sorted_pairing_levels$sorted_pairings)
p_interactions_water_II <- ggplot(interactions_II_combined%>%filter(total>=10), aes(x=Freq, y=sorted_pairings, fill=pos_neg)) +
geom_bar(position="fill", stat="identity", color="black",size=0.3) +
geom_text(aes(x=Freq, y=sorted_pairings, label=Freq, vjust=0.5),
position=position_fill(vjust=0.5),
size=4,
show.legend = FALSE,
family="Helvetica",
color="white") +
theme_bw() +
theme(text=element_text(size=22),
axis.text.x = element_text(angle = 90, hjust=1),
axis.title=element_blank(),
legend.title=element_blank(),
legend.position = "bottom",
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid=element_blank(),
strip.background=element_blank(),
legend.key.size=unit(2,"line")) +
scale_fill_manual(values=c("#2f67b1","#bf2c23"),breaks=c("pos","neg"))
interactions_water_II_binned <- interactions_II_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(self = ifelse(sorted_pairings%in%self_interaction,"Yes","No")) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_II_binned$pos_bin <- str_sub(interactions_water_II_binned$pos_bin,2)
interactions_water_II_binned_self <- interactions_water_II_binned %>%
filter(self=="Yes" & pos_neg=="pos") %>%
rename(functional_trait = sorted_pairings) %>%
select(functional_trait,total,pos_bin) %>%
mutate(functional_trait = sub("-.*", "", functional_trait))
water_II_edges <- interactions_water_II_binned %>%
filter(self=="No" & pos_neg=="pos") %>%
separate(sorted_pairings,into=c("functional.x", "functional.y"),sep="-") %>%
select(functional.x, functional.y, total, pos_bin)
interaction_count <- vector()
for (i in 1:length(functionalTraits)){
count <- water_II_edges %>%
filter(functional.x == functionalTraits[i] | functional.y == functionalTraits[i])
count <- sum(count$total)
interaction_count[i] <- count
}
circle_position <- data.frame("circle_position"=c(1:9),
"functional_trait" = functionalTraits,
"interaction_count" = interaction_count)
water_II_nodes <- long_RNA_water_II %>%
group_by(functional_trait) %>%
summarize(n_reads=sum(n_reads)) %>%
left_join(interactions_water_II_binned_self, by="functional_trait") %>%
left_join(circle_position, by="functional_trait") %>%
rename(self=total,self_posbin=pos_bin)
water_II_network <- water_II_edges %>%
left_join(water_II_nodes%>%rename(functional.x=functional_trait), by="functional.x") %>%
rename(self.x=self,self_posbin.x=self_posbin, n_reads.x=n_reads,circle_position.x=circle_position) %>%
left_join(water_II_nodes%>%rename(functional.y=functional_trait), by="functional.y") %>%
rename(self.y=self,self_posbin.y=self_posbin, n_reads.y=n_reads, circle_position.y=circle_position)
water_II_network[is.na(water_II_network)] <- 0
water_II_network <- water_II_network %>%
mutate_at(c("pos_bin","self_posbin.x","self_posbin.y"), as.numeric) %>%
mutate(n_reads.x=round(n_reads.x*(88/19)), n_reads.y=round(n_reads.y*(88/19)))
#to make all network node sizes are normalised
write.csv(water_II_network, "./water_RNA_II_network.csv")
interactions_III <- water_III_net$edgelist1 %>%
rename(asv_code=v1) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.x=functional_trait, x=asv_code, asv_code=v2, species.x=species, origin.x=origin) %>%
left_join(taxa%>%select(asv_code,functional_trait,species,origin),by="asv_code") %>%
rename(functional.y=functional_trait, y=asv_code, species.y=species, origin.y=origin)%>%
arrange(desc(asso)) %>%
mutate(pos_neg=ifelse(asso>0,"pos","neg"))
water_III_overall <- interactions_III %>%
select(x,y,functional.x,functional.y,asso,pos_neg) %>%
left_join(water_III_cluster_asv%>%select(asv_code,cluster)%>%rename(x=asv_code), by="x") %>%
left_join(water_III_cluster_asv%>%select(asv_code,cluster)%>%rename(y=asv_code), by="y")
water_III_overall$hub.x <- ifelse(water_III_overall$x %in% water_III_hubs$asv_code, "yes","no")
water_III_overall$hub.y <- ifelse(water_III_overall$y %in% water_III_hubs$asv_code, "yes","no")
write.csv(water_III_overall, "./water_RNA_III_overall.csv")
interactions_III_pos <-filter(interactions_III, interactions_III$pos_neg=="pos")
interactions_III_neg <-filter(interactions_III, interactions_III$pos_neg=="neg")
# Create a combined factor representing the pairs, sorted
sorted_pairings <- factor(apply(interactions_III_pos[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
sorted_pairings <- factor(apply(interactions_III_neg[, c("functional.x", "functional.y")], 1, function(row) paste(sort(row), collapse = "-")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_III_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_III_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_III_combined <- interactions_III_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100) #%>%
#filter(total>=10)
sorted_pairing_levels <- interactions_III_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_III_combined$sorted_pairings <- factor(interactions_III_combined$sorted_pairings,levels=sorted_pairing_levels$sorted_pairings)
p_interactions_water_III <- ggplot(interactions_III_combined%>%filter(total>=10), aes(x=Freq, y=sorted_pairings, fill=pos_neg)) +
geom_bar(position="fill", stat="identity", color="black",size=0.3) +
geom_text(aes(x=Freq, y=sorted_pairings, label=Freq, vjust=0.5),
position=position_fill(vjust=0.5),
size=4,
show.legend = FALSE,
family="Helvetica",
color="white") +
theme_bw() +
theme(text=element_text(size=22),
axis.text.x = element_text(angle = 90, hjust=1),
axis.title=element_blank(),
legend.title=element_blank(),
legend.position = "bottom",
plot.margin = unit(c(0,0,3,0), "cm"),
panel.grid=element_blank(),
strip.background=element_blank(),
legend.key.size=unit(2,"line")) +
scale_fill_manual(values=c("#2f67b1","#bf2c23"),breaks=c("pos","neg"))
interactions_water_III_binned <- interactions_III_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(self = ifelse(sorted_pairings%in%self_interaction,"Yes","No")) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_III_binned$pos_bin <- str_sub(interactions_water_III_binned$pos_bin,2)
interactions_water_III_binned_self <- interactions_water_III_binned %>%
filter(self=="Yes" & pos_neg=="pos") %>%
rename(functional_trait = sorted_pairings) %>%
select(functional_trait,total,pos_bin) %>%
mutate(functional_trait = sub("-.*", "", functional_trait))
water_III_edges <- interactions_water_III_binned %>%
filter(self=="No" & pos_neg=="pos") %>%
separate(sorted_pairings,into=c("functional.x", "functional.y"),sep="-") %>%
select(functional.x, functional.y, total, pos_bin)
interaction_count <- vector()
for (i in 1:length(functionalTraits)){
count <- water_III_edges %>%
filter(functional.x == functionalTraits[i] | functional.y == functionalTraits[i])
count <- sum(count$total)
interaction_count[i] <- count
}
circle_position <- data.frame("circle_position"=c(1:9),
"functional_trait" = functionalTraits,
"interaction_count" = interaction_count)
water_III_nodes <- long_RNA_water_III %>%
group_by(functional_trait) %>%
summarize(n_reads=sum(n_reads)) %>%
add_row(functional_trait="Invertebrate_parasite",n_reads=1) %>% #artificially add a Invertebrate_parasite node
left_join(interactions_water_III_binned_self, by="functional_trait") %>%
left_join(circle_position, by="functional_trait") %>%
rename(self=total,self_posbin=pos_bin)
water_III_network <- water_III_edges %>%
left_join(water_III_nodes%>%rename(functional.x=functional_trait), by="functional.x") %>%
rename(self.x=self,self_posbin.x=self_posbin, n_reads.x=n_reads,circle_position.x=circle_position) %>%
left_join(water_III_nodes%>%rename(functional.y=functional_trait), by="functional.y") %>%
rename(self.y=self,self_posbin.y=self_posbin, n_reads.y=n_reads, circle_position.y=circle_position)
artificial_row <- c("Mixotroph","Protist_parasite",0,0,87908,15,90,2,91,1,0,0,3,1)
water_III_network[is.na(water_III_network)] <- 0
water_III_network <- water_III_network %>%
rbind(artificial_row) %>%
mutate_at(vars(total:interaction_count.y), as.numeric) %>%
mutate(n_reads.x=round(n_reads.x*(88/38)), n_reads.y=round(n_reads.y*(88/38)))
#to make all network node sizes are normalised
write.csv(water_III_network, "./water_RNA_III_network.csv")
pdf("./GE_IC_functional_figs/supplementary_RNA_posneg.pdf", height=36, width=30); plot((p_interactions_ice_I + p_interactions_ice_II + p_interactions_ice_III) / (p_interactions_water_I + p_interactions_water_II + p_interactions_water_III)); dev.off()
dom_size_no <- data.frame("RNA_dom_size"=c("pico","nano","micro"),
"grouping"=c("pico-photo","nano-photo","micro-photo"))
eukaryvore_subdivision <- unique(taxa %>% filter(functional_trait=="Eukaryvore") %>% select(subdivision))
eukaryvore_subdivision <- data.frame(eukaryvore_subdivision,
"grouping"=eukaryvore_subdivision$subdivision)
water_I_photo_euk <- interactions_I %>%
filter(functional.x %in% c("Phototroph","Eukaryvore") &
functional.y %in% c("Phototroph","Eukaryvore") &
functional.x != functional.y) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(x=asv_code),by="x") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.x=RNA_dom_size, subdivision.x=subdivision, grouping.x=grouping) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(y=asv_code),by="y") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.y=RNA_dom_size, subdivision.y=subdivision, grouping.y=grouping) %>%
select(x,y,pos_neg, functional.x, subdivision.x, species.x, RNA_dom_size.x, grouping.x,
functional.y, subdivision.y, species.y, RNA_dom_size.y, grouping.y)
write.csv(water_I_photo_euk, "./water_RNA_I_investigation.csv")
pos <- water_I_photo_euk %>% filter(pos_neg=="pos")
sorted_pairings <- factor(apply(pos[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
neg <- water_I_photo_euk %>% filter(pos_neg=="neg")
sorted_pairings <- factor(apply(neg[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_I_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_I_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_I_combined <- interactions_I_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100)
sorted_pairing_levels <- interactions_I_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_water_I_binned <- interactions_I_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_I_binned$pos_bin <- str_sub(interactions_water_I_binned$pos_bin,2)
investigation_I <- interactions_water_I_binned %>%
filter(pos_neg=="pos") %>%
separate(sorted_pairings,into=c("grouping.x", "grouping.y"),sep="_") %>%
select(grouping.x, grouping.y, total, pos_bin)
grouping_ASV_diversity <- rbind((water_I_photo_euk %>% select(x,grouping.x) %>% rename(asv_code=x,grouping=grouping.x)),(water_I_photo_euk %>% select(y,grouping.y) %>% rename(asv_code=y,grouping=grouping.y))) %>%
distinct(asv_code,grouping) %>%
group_by(grouping) %>%
summarize(asv_diversity=length(asv_code))
investigation_I <- investigation_I %>%
left_join(grouping_ASV_diversity %>% rename(grouping.x=grouping), by="grouping.x") %>%
rename(asv_diversity.x=asv_diversity) %>%
left_join(grouping_ASV_diversity %>% rename(grouping.y=grouping), by="grouping.y") %>%
rename(asv_diversity.y=asv_diversity) %>%
mutate_at(vars(total:asv_diversity.y), as.numeric)
write.csv(investigation_I, "./water_RNA_I_investigation_summary.csv")
water_II_photo_euk <- interactions_II %>%
filter(functional.x %in% c("Phototroph","Eukaryvore") &
functional.y %in% c("Phototroph","Eukaryvore") &
functional.x != functional.y) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(x=asv_code),by="x") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.x=RNA_dom_size, subdivision.x=subdivision, grouping.x=grouping) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(y=asv_code),by="y") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.y=RNA_dom_size, subdivision.y=subdivision, grouping.y=grouping) %>%
select(x,y,pos_neg, functional.x, subdivision.x, species.x, RNA_dom_size.x, grouping.x,
functional.y, subdivision.y, species.y, RNA_dom_size.y, grouping.y)
write.csv(water_II_photo_euk, "./water_RNA_II_investigation.csv")
pos <- water_II_photo_euk %>% filter(pos_neg=="pos")
sorted_pairings <- factor(apply(pos[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
neg <- water_II_photo_euk %>% filter(pos_neg=="neg")
sorted_pairings <- factor(apply(neg[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_II_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_II_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_II_combined <- interactions_II_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100)
sorted_pairing_levels <- interactions_II_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_water_II_binned <- interactions_II_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_II_binned$pos_bin <- str_sub(interactions_water_II_binned$pos_bin,2)
investigation_II <- interactions_water_II_binned %>%
filter(pos_neg=="pos") %>%
separate(sorted_pairings,into=c("grouping.x", "grouping.y"),sep="_") %>%
select(grouping.x, grouping.y, total, pos_bin)
grouping_ASV_diversity <- rbind((water_II_photo_euk %>% select(x,grouping.x) %>% rename(asv_code=x,grouping=grouping.x)),(water_II_photo_euk %>% select(y,grouping.y) %>% rename(asv_code=y,grouping=grouping.y))) %>%
distinct(asv_code,grouping) %>%
group_by(grouping) %>%
summarize(asv_diversity=length(asv_code))
investigation_II <- investigation_II %>%
left_join(grouping_ASV_diversity %>% rename(grouping.x=grouping), by="grouping.x") %>%
rename(asv_diversity.x=asv_diversity) %>%
left_join(grouping_ASV_diversity %>% rename(grouping.y=grouping), by="grouping.y") %>%
rename(asv_diversity.y=asv_diversity) %>%
mutate_at(vars(total:asv_diversity.y), as.numeric)
write.csv(investigation_II, "./water_RNA_II_investigation_summary.csv")
water_III_photo_euk <- interactions_III %>%
filter(functional.x %in% c("Phototroph","Eukaryvore") &
functional.y %in% c("Phototroph","Eukaryvore") &
functional.x != functional.y) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(x=asv_code),by="x") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.x=RNA_dom_size, subdivision.x=subdivision, grouping.x=grouping) %>%
left_join(taxa%>%select(asv_code,subdivision,RNA_dom_size)%>%rename(y=asv_code),by="y") %>%
left_join(dom_size_no,by="RNA_dom_size") %>%
rows_update(eukaryvore_subdivision , by="subdivision", unmatched="ignore") %>%
rename(RNA_dom_size.y=RNA_dom_size, subdivision.y=subdivision, grouping.y=grouping) %>%
select(x,y,pos_neg, functional.x, subdivision.x, species.x, RNA_dom_size.x, grouping.x,
functional.y, subdivision.y, species.y, RNA_dom_size.y, grouping.y)
write.csv(water_III_photo_euk, "./water_RNA_III_investigation.csv")
pos <- water_III_photo_euk %>% filter(pos_neg=="pos")
sorted_pairings <- factor(apply(pos[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_pos <- as.data.frame(table(sorted_pairings))
sorted_pairing_pos$pos_neg <- "pos"
neg <- water_III_photo_euk %>% filter(pos_neg=="neg")
sorted_pairings <- factor(apply(neg[, c("grouping.x", "grouping.y")], 1, function(row) paste(sort(row), collapse = "_")))
sorted_pairing_neg <- as.data.frame(table(sorted_pairings))
sorted_pairing_neg$pos_neg <- "neg"
interactions_III_combined <- rbind(sorted_pairing_pos,sorted_pairing_neg)
interactions_count <-interactions_III_combined %>%
group_by(sorted_pairings) %>%
summarize(total=sum(Freq))
interactions_III_combined <- interactions_III_combined %>%
left_join(interactions_count,by="sorted_pairings") %>%
mutate(pos_pct=(Freq/total)*100)
sorted_pairing_levels <- interactions_III_combined %>%
filter(pos_neg=="pos") %>%
arrange(pos_pct) %>%
select(sorted_pairings)
interactions_water_III_binned <- interactions_III_combined %>%
mutate(pos_bin = cut(pos_pct, breaks=c(0,10,20,30,40,50,60,70,80,90,100), right=FALSE,include.lowest=TRUE)) %>%
mutate(pos_bin = sub(",.*","",pos_bin))
interactions_water_III_binned$pos_bin <- str_sub(interactions_water_III_binned$pos_bin,2)
investigation_III <- interactions_water_III_binned %>%
filter(pos_neg=="pos") %>%
separate(sorted_pairings,into=c("grouping.x", "grouping.y"),sep="_") %>%
select(grouping.x, grouping.y, total, pos_bin)
grouping_ASV_diversity <- rbind((water_III_photo_euk %>% select(x,grouping.x) %>% rename(asv_code=x,grouping=grouping.x)),(water_III_photo_euk %>% select(y,grouping.y) %>% rename(asv_code=y,grouping=grouping.y))) %>%
distinct(asv_code,grouping) %>%
group_by(grouping) %>%
summarize(asv_diversity=length(asv_code))
investigation_III <- investigation_III %>%
left_join(grouping_ASV_diversity %>% rename(grouping.x=grouping), by="grouping.x") %>%
rename(asv_diversity.x=asv_diversity) %>%
left_join(grouping_ASV_diversity %>% rename(grouping.y=grouping), by="grouping.y") %>%
rename(asv_diversity.y=asv_diversity) %>%
mutate_at(vars(total:asv_diversity.y), as.numeric)
write.csv(investigation_III, "./water_RNA_III_investigation_summary.csv")
Network <- c("Ice Stage I", "Ice Stage II", "Ice Stage III", "Water Stage I", "Water Stage II", "Water Stage III")
Cluster_coefficient <- c(ice_I_net_props$globalProps$clustCoef1,
ice_II_net_props$globalProps$clustCoef1,
ice_III_net_props$globalProps$clustCoef1,
water_I_net_props$globalProps$clustCoef1,
water_II_net_props$globalProps$clustCoef1,
water_III_net_props$globalProps$clustCoef1)
No_of_clusters <- c(max(ice_I_net_props$clustering$clust1),
max(ice_II_net_props$clustering$clust1),
max(ice_III_net_props$clustering$clust1),
max(water_I_net_props$clustering$clust1),
max(water_II_net_props$clustering$clust1),
max(water_III_net_props$clustering$clust1))
Modularity <- c(ice_I_net_props$globalProps$modularity1,
ice_II_net_props$globalProps$modularity1,
ice_III_net_props$globalProps$modularity1,
water_I_net_props$globalProps$modularity1,
water_II_net_props$globalProps$modularity1,
water_III_net_props$globalProps$modularity1)
No_of_nodes <- c(nrow(ice_I_cluster_asv),
nrow(ice_II_cluster_asv),
nrow(ice_III_cluster_asv),
nrow(water_I_cluster_asv),
nrow(water_II_cluster_asv),
nrow(water_III_cluster_asv))
No_of_edges <- c(nrow(ice_I_net$edgelist1),
nrow(ice_II_net$edgelist1),
nrow(ice_III_net$edgelist1),
nrow(water_I_net$edgelist1),
nrow(water_II_net$edgelist1),
nrow(water_III_net$edgelist1))
network_properties <- data.frame(Network, Cluster_coefficient, No_of_clusters, Modularity, No_of_nodes, No_of_edges)
xtable(network_properties)
